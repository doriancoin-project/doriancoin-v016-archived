#!/sbin/openrc-run

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/doriancoin/.doriancoin" ]; then
	DORIANCOIND_DEFAULT_DATADIR="/var/lib/doriancoin/.doriancoin"
else
	DORIANCOIND_DEFAULT_DATADIR="/var/lib/doriancoind"
fi

DORIANCOIND_CONFIGFILE=${DORIANCOIND_CONFIGFILE:-/etc/doriancoin/doriancoin.conf}
DORIANCOIND_PIDDIR=${DORIANCOIND_PIDDIR:-/var/run/doriancoind}
DORIANCOIND_PIDFILE=${DORIANCOIND_PIDFILE:-${DORIANCOIND_PIDDIR}/doriancoind.pid}
DORIANCOIND_DATADIR=${DORIANCOIND_DATADIR:-${DORIANCOIND_DEFAULT_DATADIR}}
DORIANCOIND_USER=${DORIANCOIND_USER:-${DORIANCOIN_USER:-doriancoin}}
DORIANCOIND_GROUP=${DORIANCOIND_GROUP:-doriancoin}
DORIANCOIND_BIN=${DORIANCOIND_BIN:-/usr/bin/doriancoind}
DORIANCOIND_NICE=${DORIANCOIND_NICE:-${NICELEVEL:-0}}
DORIANCOIND_OPTS="${DORIANCOIND_OPTS:-${DORIANCOIN_OPTS}}"

name="Doriancoin Core Daemon"
description="Doriancoin cryptocurrency P2P network daemon"

command="/usr/bin/doriancoind"
command_args="-pid=\"${DORIANCOIND_PIDFILE}\" \
		-conf=\"${DORIANCOIND_CONFIGFILE}\" \
		-datadir=\"${DORIANCOIND_DATADIR}\" \
		-daemon \
		${DORIANCOIND_OPTS}"

required_files="${DORIANCOIND_CONFIGFILE}"
start_stop_daemon_args="-u ${DORIANCOIND_USER} \
			-N ${DORIANCOIND_NICE} -w 2000"
pidfile="${DORIANCOIND_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${DORIANCOIND_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${DORIANCOIND_USER}:${DORIANCOIND_GROUP}" \
	"${DORIANCOIND_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${DORIANCOIND_USER}:${DORIANCOIND_GROUP}" \
	"${DORIANCOIND_PIDDIR}"

	checkpath -f \
	-o ${DORIANCOIND_USER}:${DORIANCOIND_GROUP} \
	-m 0660 \
	${DORIANCOIND_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${DORIANCOIND_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run doriancoind."
		eerror "The setting must appear in ${DORIANCOIND_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"Doriancoin Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
